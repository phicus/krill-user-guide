import{_ as e,a as t}from"./0002-a49fefcd.js";import{_ as r,n as a,p as i,a0 as o}from"./framework-b76f3d1b.js";const s={},n=o('<h1 id="rubik" tabindex="-1"><a class="header-anchor" href="#rubik" aria-hidden="true">#</a> Rubik</h1><p>Module in which everything related with Bitstream is managed in Krill.</p><p>It has two submenus:</p><ul><li><a href="/guide/krill2/rubik/services">Services</a>: Services that involve the main operator.</li><li><a href="/guide/krill2/rubik/trouble-tickets">Trouble Tickets</a>: Management of incidents for those main operators that allow it.</li></ul><p>In the main page there&#39;s a summary of the last generated services and trouble tickets. Both of them can be ordered and filtered by the different headers. There&#39;s also available a tool to filter by owner and service or ticket condition.</p><p>The service fields are: ID, Customer, Service Profile, Owner, State, Planned Installation, Created at y Last Update.</p><p><img src="'+e+'" alt="ISP Customer Dashboard"></p><p>The trouble tickets fields are: ID, Customer, Address, Owner, State, Priority, Symptom, Created at y Last Update.</p><p><img src="'+t+'" alt="ISP Customer Dashboard"></p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>From the bar on the top of each summary box a new service or trouble ticket can be created by clicking on the right button.</p></div>',10),l=[n];function c(d,h){return a(),i("div",null,l)}const u=r(s,[["render",c],["__file","index.html.vue"]]);export{u as default};
